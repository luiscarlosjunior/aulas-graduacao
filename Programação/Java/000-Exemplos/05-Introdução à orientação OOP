01. Classe
  • Exemplo:
    public class ExemploFuncionario{
      public static void main (String[] args){
      }
    }

02. Objeto
  • Exemplo:
    public class Funcionario {
    }

    public class ExemploFuncionario{
      public static void main (String[] args){
        Funcionario f = new Funcionario();
      }
    }

03. Atributos
  • Exemplo:
    public class Funcionario {
      String nome;
      Integer peso;
    }

    public class ExemploFuncionario{
      public static void main (String[] args){
        Funcionario f = new Funcionario();
        f.nome = "Flavio";
        f.peso = 95;
      }
    }

04. Tipos construídos
  • Exemplo:
    public class Funcionario {
      String nome;
      Integer peso;
    }

    public class ExemploFuncionario{
      public static void main (String[] args){
        Funcionario f = new Funcionario();
        f.nome = "Flavio";
        f.peso = 95;
      }
    }

  04.01. Atribuição entre objetos de tipos construídos
    • Exemplo:
      public class Funcionario {
        String nome;
        Integer peso;
        Double altura;
      }
	
      public class ExemploFuncionario{
        public static void main (String[] args){

          Funcionario f = new Funcionario();
          f.nome = "Flavio";
          f.peso = 95;
          f.altura = 1.80;
	
          Funcionario m = new Funcionario();
          m.nome = "Marry";
          m.peso = 60;
	  f.altura = 1.60;
	
	  f = m;
	  System.out.println("Peso de Flavio é: " + f.peso);
	  System.out.println("Altura de Flavio é: " + f.altura);
        }
      }

  04.02. Variáveis não instanciadas	
    • Exemplo:
      public class Funcionario {
        String nome;
        Integer peso;
      }
	
      public class ExemploFuncionario{
        public static void main (String[] args){
          //Errado - Variáveis não instanciadas
          //Funcionario f;
          //f.nome = "Flavio";
          //f.peso = 95;

          //Correto - Variáveis instanciadas
          Funcionario f = new Funcionario();
          f.nome = "Flavio";
          f.peso = 95;
        }
      }
    
05. this
  • Exemplo:
    public class Funcionario {
      private String nome;
      private Integer peso;
      
      void setNome(String nome){
        this.nome = nome;
      }
      
      void setPeso(Integer peso){
        this.peso = peso;
      }
      
      String exibe(){
        return (nome + peso);
      }
    }
	
    public class ExemploFuncionario{
      public static void main (String[] args){
        Funcionario f = new Funcionario();
	f.setNome("Flavio");
	f.setPeso(95);        
	System.out.println("Exibe: " + exibe());
      }
    }

06. Encapsulamento (modificadores de acesso)
  • Sintaxe:
    <modificadorDeAcesso> <tipoDeDado> <nomeVariavel>
    
  06.01. Tipos de modificadores de acesso
    • public
    • protected
    • default
    • private

07.Pacotes
  • Sintaxe:
    package <nomeDoPacote>;
  
  • Exemplo:
    package java.lang;

    public class ExemploPacote{
      public static void main(String args[]){
      }
    }
    
  07.01. Exemplo de pacotes
    • java.applet: Pacote utilizado para construção de applets.
    • java.awt: Pacote utilizado para construção de inteface grafica
    • java.nio: Pacote utilizado para construção de recursos de entrada e saída de dados, além de recursos externos.
    • java.lang: Pacote padrão com recursos para desenvolvimento Java
    • java.security: Pacote utilizado para construção de classes e interfaces de segurança. 
    • java.sql: Pacote que contem APIs utilizadas para acesso e gestão de dados em banco de dados
    • java.text: Pacote utilizado para construção tratamento de textos, datas e números.
    
  07.02. Acessando uma classe em outro pacote
  • Exemplo:
    package Um
    public class Clima {
      public void exibe(){
        System.out.println("Ensolarado");
      }
    }

    package Dois
    import Um.exibe;
    public class ExemploFuncionario{
      public static void main (String[] args){
        Clima c = new Clima();
	c.exibe();
      }
    }
